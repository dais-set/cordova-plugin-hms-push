{"version":3,"file":"HmsPushEvent.js","sourceRoot":"","sources":["../scripts/HmsPushEvent.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;EAcE;;;AAEF,SAAgB,uBAAuB,CAAE,MAAU;IAC/C,MAAM,CAAC,gBAAgB,CAAC,oCAA4B,EAAC,MAAM,CAAC,CAAA;AAChE,CAAC;AAFD,0DAEC;AACD,SAAgB,eAAe,CAAE,MAAU;IACvC,MAAM,CAAC,gBAAgB,CAAC,4BAAoB,EAAC,MAAM,CAAC,CAAA;AACxD,CAAC;AAFD,0CAEC;AACD,SAAgB,YAAY,CAAE,MAAU;IACpC,MAAM,CAAC,gBAAgB,CAAC,4BAAoB,EAAC,MAAM,CAAC,CAAA;AACxD,CAAC;AAFD,oCAEC;AACD,SAAgB,iBAAiB,CAAE,MAAU;IACzC,MAAM,CAAC,gBAAgB,CAAC,4BAAoB,EAAC,MAAM,CAAC,CAAA;AACxD,CAAC;AAFD,8CAEC;AACD,SAAgB,sBAAsB,CAAE,MAAU;IAC9C,MAAM,CAAC,gBAAgB,CAAC,kCAA0B,EAAC,MAAM,CAAC,CAAA;AAC9D,CAAC;AAFD,wDAEC;AACD,SAAgB,0BAA0B,CAAE,MAAU;IAClD,MAAM,CAAC,gBAAgB,CAAC,sCAA8B,EAAC,MAAM,CAAC,CAAA;AAClE,CAAC;AAFD,gEAEC;AACD,SAAgB,yBAAyB,CAAE,MAAU;IACjD,MAAM,CAAC,gBAAgB,CAAC,uCAA+B,EAAC,MAAM,CAAC,CAAA;AACnE,CAAC;AAFD,8DAEC;AACD,SAAgB,uBAAuB,CAAE,MAAU;IAC/C,MAAM,CAAC,gBAAgB,CAAC,iCAAyB,EAAC,MAAM,CAAC,CAAA;AAC7D,CAAC;AAFD,0DAEC;AAEY,QAAA,4BAA4B,GAAG,8BAA8B,CAAA;AAC7D,QAAA,oBAAoB,GAAG,sBAAsB,CAAA;AAC7C,QAAA,oBAAoB,GAAG,sBAAsB,CAAA;AAC7C,QAAA,yBAAyB,GAAG,2BAA2B,CAAA;AACvD,QAAA,+BAA+B,GAAG,iCAAiC,CAAA;AACnE,QAAA,oBAAoB,GAAG,sBAAsB,CAAA;AAC7C,QAAA,0BAA0B,GAAG,4BAA4B,CAAA;AACzD,QAAA,8BAA8B,GAAG,gCAAgC,CAAA","sourcesContent":["/*\r\n    Copyright 2020. Huawei Technologies Co., Ltd. All rights reserved.\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \"License\");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n*/\r\n\r\nexport function onRemoteMessageReceived (result:any) {\r\n    window.registerHMSEvent(REMOTE_DATA_MESSAGE_RECEIVED,result)\r\n}\r\nexport function onTokenReceived (result:any) {\r\n    window.registerHMSEvent(TOKEN_RECEIVED_EVENT,result)\r\n}\r\nexport function onTokenError (result:any) {\r\n    window.registerHMSEvent(ON_TOKEN_ERROR_EVENT,result)\r\n}\r\nexport function onPushMessageSent (result:any) {\r\n    window.registerHMSEvent(ON_PUSH_MESSAGE_SENT,result)\r\n}\r\nexport function onPushMessageSentError (result:any) {\r\n    window.registerHMSEvent(ON_PUSH_MESSAGE_SENT_ERROR,result)\r\n}\r\nexport function onPushMessageSentDelivered (result:any) {\r\n    window.registerHMSEvent(ON_PUSH_MESSAGE_SENT_DELIVERED,result)\r\n}\r\nexport function onLocalNotificationAction (result:any) {\r\n    window.registerHMSEvent(LOCAL_NOTIFICATION_ACTION_EVENT,result)\r\n}\r\nexport function onNotificationOpenedApp (result:any) {\r\n    window.registerHMSEvent(NOTIFICATION_OPENED_EVENT,result)\r\n}\r\n\r\nexport const REMOTE_DATA_MESSAGE_RECEIVED = \"REMOTE_DATA_MESSAGE_RECEIVED\"\r\nexport const TOKEN_RECEIVED_EVENT = \"TOKEN_RECEIVED_EVENT\"\r\nexport const ON_TOKEN_ERROR_EVENT = \"ON_TOKEN_ERROR_EVENT\"\r\nexport const NOTIFICATION_OPENED_EVENT = \"NOTIFICATION_OPENED_EVENT\"\r\nexport const LOCAL_NOTIFICATION_ACTION_EVENT = \"LOCAL_NOTIFICATION_ACTION_EVENT\"\r\nexport const ON_PUSH_MESSAGE_SENT = \"ON_PUSH_MESSAGE_SENT\"\r\nexport const ON_PUSH_MESSAGE_SENT_ERROR = \"ON_PUSH_MESSAGE_SENT_ERROR\"\r\nexport const ON_PUSH_MESSAGE_SENT_DELIVERED = \"ON_PUSH_MESSAGE_SENT_DELIVERED\"\r\n\r\n\r\ntype Handler = (data: any) => void;\r\ndeclare global {\r\n    interface Window {\r\n        hmsEventHandlers: {\r\n            [key: string]: Handler[]\r\n        },\r\n        hmsEventHandler: (eventName: string, data: any) => void,\r\n        registerHMSEvent: (eventName: string, handler: Handler) => void\r\n        unregisterHMSEvent: (eventName: string, handler: Handler) => void\r\n    }\r\n}"]}